package com.szcomtop.meal.activity;

import android.content.Intent;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextUtils;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.BaseExpandableListAdapter;
import android.widget.Button;
import android.widget.ExpandableListView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.szcomtop.meal.R;
import com.szcomtop.meal.common.Consts;
import com.szcomtop.meal.model.Carteen;
import com.szcomtop.meal.views.CommonDialog;
import com.szcomtop.meal.views.HeadView;
import com.szcomtop.meal.views.SearchBar;
import com.zhy.http.okhttp.OkHttpUtils;
import com.zhy.http.okhttp.callback.StringCallback;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import okhttp3.Call;




/**
 * Created by wuming on 2016/4/18.
 */
public class CanteenListActivity extends BaseActivity implements AdapterView.OnItemClickListener, ExpandableListView.OnChildClickListener, TextWatcher, View.OnClickListener {

    private HeadView title;
    private ExpandableListView expandableListView;

    private int mCurrentGroupPosition = -1;
    private int mCurrentChildPosition = -1;
    private BaseExpandableListAdapter expandableListAdapter;

    List<Carteen> carteens ;
    private SearchBar searchbar ;
    private LinearLayout noneArea;
    private View noneGou;
    private CommonDialog commonDialog;
    private boolean showWu;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_carteen_list);
        findView();

        getData();


        initView();

      //  initView();


    }

    private void getData() {

        if (commonDialog == null){

            commonDialog = new CommonDialog(this);
            commonDialog.setText("更新数据");
        }
        commonDialog.show();

        String url = Consts.SERVER_PREFIX +"/mealbook/api/diningroom/get_room_all?keyword=";
        OkHttpUtils
                .post()
                .url(url)
                .build()
                .execute(new StringCallback() {
                    @Override
                    public void onError(Call call, Exception e) {
                        Log.i("wuming","diningroom response:"+e.toString());
                    }

                    @Override
                    public void onResponse(String response) {



                        if (commonDialog != null && commonDialog.isShowing()){
                            commonDialog.dismiss();
                        }
                        Log.i("wuming","response:"+response);

                        try {
                            JSONObject jsonObject = new JSONObject(response);
                            int state = (int) jsonObject.get("state");
                            if (state == 0){
                                //成功
                               JSONArray data = (JSONArray) jsonObject.get("data");
                                String dataString = data.toString();
                                if (!TextUtils.isEmpty(dataString)){
                                    Gson gson = new Gson();
                                    carteens  = gson.fromJson(dataString, new TypeToken<List<Carteen>>() {
                                    }.getType());

                                    if (carteens != null && carteens.size() != 0){


                                        setupListview();


                                    }

                                    Log.i("wuming","size:"+carteens.size()+"");


                                }


                            }else{
                                //失败
                            }


                        } catch (JSONException e) {
                            e.printStackTrace();
                        }


                    }
                });


    }


    private void initView() {
        title.setHeadParams(HeadView.TYPE_LRIGHTBTN,this);
        title.setOnHeadClick(this);

        searchbar.addTextChangedListener(this);
        Intent intent = getIntent();
        showWu = intent.getBooleanExtra("showWu", true);

        noneArea = (LinearLayout) findViewById(R.id.carteen_list_none);
        noneArea.setOnClickListener(this);
        noneGou  = noneArea.findViewById(R.id.carteen_list_child_gou_iv);
        if (!showWu){
            noneArea.setVisibility(View.GONE);
        }

    }

    private void setupListview() {
        expandableListAdapter = new BaseExpandableListAdapter(){

             @Override
             public int getGroupCount() {
                 return carteens.size();
             }

             @Override
             public int getChildrenCount(int i) {
                 return carteens.get(i).getRoomList().size();
             }

             @Override
             public Object getGroup(int i) {
                 return carteens.get(i);
             }

             @Override
             public Object getChild(int i, int i1) {
                 return carteens.get(i).getRoomList().get(i1);
             }

             @Override
             public long getGroupId(int i) {
                 return i;
             }

             @Override
             public long getChildId(int i, int i1) {
                 return i1;
             }

             @Override
             public boolean hasStableIds() {
                 return true;
             }

             @Override
             public View getGroupView(int groupPosition, boolean isExpanded,
                                      View convertView, ViewGroup parent) {

                 if (convertView == null) {

                     convertView = View.inflate(CanteenListActivity.this, R.layout.carteen_list_parent, null);
                 }
 //
                 TextView textView = (TextView) convertView.findViewById(R.id.carteen_list_parent_tv);
                 textView.setText(carteens.get(groupPosition).getName());


                ImageView arrow = (ImageView) convertView.findViewById(R.id.carteen_list_parent_arrow);
                 if (isExpanded) {
                             arrow.setImageResource(R.drawable.list_show__righticon);
                 } else {
                     arrow.setImageResource(R.drawable.list_hide_downward_icon);
                 }
                 return convertView;
             }

             @Override
             public View getChildView(int groupPosition, int childPosition,
                                      boolean isLastChild, View convertView, ViewGroup parent) {
                 if (convertView == null) {

                     convertView = View.inflate(CanteenListActivity.this,R.layout.carteen_list_child, null);
                 }
                 if (groupPosition != mCurrentGroupPosition || childPosition != mCurrentChildPosition){

                     convertView.findViewById(R.id.carteen_list_child_gou_iv).setVisibility(View.INVISIBLE);
                 }else{
                     convertView.findViewById(R.id.carteen_list_child_gou_iv).setVisibility(View.VISIBLE);

                 }
                 TextView textview = (TextView) convertView.findViewById(R.id.carteen_list_child_tv);
                 textview.setText(carteens.get(groupPosition).getRoomList().get(childPosition).getRoomName());
                 return convertView;
             }

             @Override
             public boolean isChildSelectable(int i, int i1) {
                 return true;
             }
         };
        expandableListView.setAdapter(expandableListAdapter);
        expandableListView.setOnChildClickListener(this);
    }

    @Override
    public void initCenterTv(TextView cTv) {
        super.initCenterTv(cTv);
        cTv.setText("食堂列表");
    }

    @Override
    public void initRightBtn(Button rBtn) {
        super.initRightBtn(rBtn);
        rBtn.setText("完成");
    }

    @Override
    public void OnLeftBtnClick(View v) {
        super.OnLeftBtnClick(v);
        onBackPressed();
    }

    @Override
    public void OnRightBtnClick(View v) {
        super.OnRightBtnClick(v);
      onBackPressed();
    }

    @Override
    public void onBackPressed() {

        if (!showWu){
            if (mCurrentGroupPosition == -1){
                Toast.makeText(this,"请选择食堂",0).show();
                return;
            }
        }

        Intent intent = getIntent();
        intent.putExtra("selectCarteen",getSelectCarteen());
        setResult(0,intent);
        super.onBackPressed();
    }

    private Carteen.RoomListBean getSelectCarteen(){
        if (mCurrentGroupPosition == -1){
            return   null;
        }else{
            Carteen carteen = carteens.get(mCurrentGroupPosition);
            List<Carteen.RoomListBean> roomList = carteen.getRoomList();

            if (roomList != null){
                return  roomList.get(mCurrentChildPosition);
            }else {
                return  null;
            }

        }
    }

    private void findView() {
        title = (HeadView) findViewById(R.id.carteen_list_title);
        expandableListView = (ExpandableListView) findViewById(R.id.carteen_list_expanable_list);
        searchbar = (SearchBar) findViewById(R.id.carteen_list_search_bar);
    }

    @Override
    public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {

    }

    @Override
    public boolean onChildClick(ExpandableListView expandableListView, View view, int groupPosition, int childPosition, long l) {


        View gou = view.findViewById(R.id.carteen_list_child_gou_iv);
        noneGou.setVisibility(View.INVISIBLE);
        if (gou.isShown()){
           // gou.setVisibility(View.INVISIBLE);
            mCurrentGroupPosition = -1 ;
            mCurrentChildPosition = -1 ;

        }else {

          //  gou.setVisibility(View.VISIBLE);
            mCurrentGroupPosition = groupPosition ;
            mCurrentChildPosition = childPosition ;
        }
        //mCurrentChildItem = view ;

        expandableListAdapter.notifyDataSetChanged();

        return true;
    }

    @Override
    public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {

    }

    @Override
    public void onTextChanged(CharSequence s, int start, int before, int count) {

        String aa = s.toString();

        if (carteens == null){
            return;
        }

        if(TextUtils.isEmpty(aa)){
            for (int i = 0; i < carteens.size(); i++) {
                expandableListView.collapseGroup(i);
            }
            return;
        }

        Pattern p = Pattern.compile(aa);
        for (int i = 0; i < carteens.size(); i++) {
            expandableListView.collapseGroup(i);
        }

        for (int i = 0; i < carteens.size(); i++) {
            Carteen carteen = carteens.get(i);
            List<Carteen.RoomListBean> roomList = carteen.getRoomList();
            for (int j = 0 ; j<roomList.size() ;j ++){

                Matcher matcher = p.matcher(carteen.getName()+roomList.get(j).getRoomName());
                if (matcher.find()) {

                    expandableListView.expandGroup(i);

                }
            }

        }



    }

    @Override
    public void afterTextChanged(Editable editable) {

    }

    @Override
    public void onClick(View view) {
        switch (view.getId()){

            case R.id.carteen_list_none:
                if(noneGou.isShown()){
                    noneGou.setVisibility(View.INVISIBLE);
                }else {
                    noneGou.setVisibility(View.VISIBLE);
                }

                mCurrentChildPosition = -1 ;
                mCurrentGroupPosition = -1 ;
                if (expandableListAdapter != null){

                    expandableListAdapter.notifyDataSetChanged();
                }


        }

    }
}
