package com.szcomtop.meal.activity;

import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.szcomtop.meal.R;
import com.szcomtop.meal.common.CommonAdapter;
import com.szcomtop.meal.common.Consts;
import com.szcomtop.meal.common.ViewHolder;
import com.szcomtop.meal.model.CarteenStastatic1;
import com.szcomtop.meal.model.Response;
import com.szcomtop.meal.views.CommonDialog;
import com.szcomtop.meal.views.DateWheelView;
import com.szcomtop.meal.views.HeadView;
import com.szcomtop.meal.views.SlidingFromTopView;
import com.szcomtop.meal.views.StatisticCard;
import com.zhy.http.okhttp.OkHttpUtils;
import com.zhy.http.okhttp.callback.StringCallback;

import org.json.JSONArray;
import org.json.JSONObject;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import okhttp3.Call;

/**
 * Created by wuming on 16/3/25.
 */
public class StatisticsDetailActivity extends BaseActivity implements View.OnClickListener {

    private HeadView mStatisticDetailTitle;
    private TextView mStatisticDetailDateTv;
    private TextView mStatisticDetailDepartment;
    private StatisticCard mStatisticDetailStop;
    private StatisticCard mStatisticDetailHave;
    private LinearLayout mStatisticDetailDateArea;
    private SlidingFromTopView slidingFromTopView;
    private String dineRoomId = "";
    private String dineRoomName = "";
    private CommonDialog commonDialog;
    private String startTime;
    private String endTime;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_statistics_detail);
        assignViews();
        initView();
    }

    private void initView() {

        Intent intent = getIntent();
        dineRoomId = intent.getStringExtra("dineRoomId");
        Log.i("wuming","dineRoomId:"+dineRoomId);
        dineRoomName = intent.getStringExtra("dineRoomName");
        startTime = intent.getStringExtra("startTime");
        endTime = intent.getStringExtra("endTime");


        mStatisticDetailTitle.setHeadParams(HeadView.TYPE_LEFTONLY,this);
        mStatisticDetailTitle.setOnHeadClick(this);
        mStatisticDetailStop.setTitleLeftText("停餐食堂");
        mStatisticDetailHave.setTitleLeftText("临餐食堂");
        mStatisticDetailDateArea.setOnClickListener(this);

        if (!TextUtils.isEmpty(startTime)&& !TextUtils.isEmpty(endTime)){
            getStatisticDetail(startTime,endTime);
            String[] startSplit = startTime.split("-");
            String[] endSplit = endTime.split("-");
            mStatisticDetailDateTv.setText(String.format("%s年%s月至%s年%s月",startSplit[0],startSplit[1],endSplit[0],endSplit[1]));
        }else {
            Calendar calendar = Calendar.getInstance();

            int year = calendar.get(Calendar.YEAR);
            int month = calendar.get(Calendar.MONTH);
            mStatisticDetailDateTv.setText(String.format("%d年%2d月至%d年%2d月",year,month+1,year,month+1));

//        calendar.add(Calendar.MONTH,-3);
//        Date time = calendar.getTime();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
//
//
            getStatisticDetail(dateFormat.format(new Date()),dateFormat.format(new Date()));
        }






    }

    @Override
    public void initCenterTv(TextView cTv) {
        super.initCenterTv(cTv);
        cTv.setText(dineRoomName);
    }

    private void assignViews() {
        mStatisticDetailTitle = (HeadView) findViewById(R.id.statistic_detail_title);
        mStatisticDetailDateTv = (TextView) findViewById(R.id.statistic_detail_date_tv);
        mStatisticDetailStop = (StatisticCard) findViewById(R.id.statistic_detail_stop);
        mStatisticDetailHave = (StatisticCard) findViewById(R.id.statistic_detail_have);
        mStatisticDetailDateArea = (LinearLayout)findViewById(R.id.statistic_detail_date_area);
    }


    public void getStatisticDetail(String startTime ,String endTime) {


        if (commonDialog == null){

            commonDialog = new CommonDialog(this);
            commonDialog.setText("更新数据");
        }
        commonDialog.show();

        String url = String.format(Consts.SERVER_PREFIX +"/mealbook/api/statistical/dine_room/details");


        OkHttpUtils
                .post()
                .url(url)
                .addParams("startTime", startTime )
                .addParams("endTime",endTime )
                .addParams("dineRoomId",dineRoomId)
                .build()
                .execute(new StringCallback() {
                    @Override
                    public void onError(Call call, Exception e) {

                        // commonDialog.dismiss();


                    }

                    @Override
                    public void onResponse(String response) {

                        if (commonDialog != null && commonDialog.isShowing()){
                            commonDialog.dismiss();
                        }

                        Log.i("wuming","response:"+response);
                        try {

                            JSONObject jsonObject = new JSONObject(response);
                            int state = (int) jsonObject.get("state");


                            if (state == 0){
                                //成功
                                JSONObject data = (JSONObject) jsonObject.get("data");
                                if (data != null){
                                    JSONArray sourceList = (JSONArray) data.get("sourceList");
                                    String sourceListStr = sourceList.toString();
                                    JSONArray toList = (JSONArray) data.get("toList");
                                    String toListStr = toList.toString();
                                    Gson gson = new Gson();
                                    List<CarteenStastatic1> source= gson.fromJson(sourceListStr, new TypeToken<List<CarteenStastatic1>>() {
                                    }.getType());
                                    List<CarteenStastatic1> to= gson.fromJson(toListStr, new TypeToken<List<CarteenStastatic1>>() {
                                    }.getType());
                                    mStatisticDetailHave.setData(source,true);
                                    mStatisticDetailStop.setData(to,false);




                                }


                            }else {
                                //失败
//                                mStatisticDetailHave.setData(null,true);
//                                mStatisticDetailStop.setData(null,false);
                                Toast.makeText(StatisticsDetailActivity.this,"获取数据失败",0).show();

                            }


                        }catch (Exception e){
                            //失败

//                            mStatisticDetailHave.setData(null,true);
//                            mStatisticDetailStop.setData(null,false);
                            Toast.makeText(StatisticsDetailActivity.this,"获取数据失败",0).show();


                        }

                    }
                });

    }


    @Override
    public void onClick(View view) {
        switch (view.getId()){
            case R.id.statistic_detail_date_area:

                if (slidingFromTopView == null){
                    slidingFromTopView = new SlidingFromTopView(this);
                    FrameLayout.LayoutParams params = new FrameLayout.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT,FrameLayout.LayoutParams.MATCH_PARENT);
                    float dimension = getResources().getDimension(R.dimen.title_height);
                    params.topMargin = (int) dimension;
                    addContentView(slidingFromTopView,params);
                    final DateWheelView dateWheelView = new DateWheelView(this);
                    dateWheelView.findViewById(R.id.date_wheel_view_cancel_btn).setOnClickListener(new View.OnClickListener() {
                        @Override
                        public void onClick(View view) {
                            slidingFromTopView.dismiss();
                        }
                    });
                    dateWheelView.findViewById(R.id.date_wheel_view_ok_btn).setOnClickListener(new View.OnClickListener() {
                        @Override
                        public void onClick(View view) {
                            String startTime = dateWheelView.getStartTime();
                            String endTime = dateWheelView.getEndTime();

                            Log.i("wuming","startTime:"+startTime);
                            Log.i("wuming","endTime:"+endTime);

                            int i = startTime.compareTo(endTime);
                            if (i > 0){
                                Toast.makeText(StatisticsDetailActivity.this,"开始日期不能大于结束日期",0).show();
                            }else {

                                slidingFromTopView.dismiss();
                                String[] startSplit = startTime.split("-");
                                String[] endSplit = endTime.split("-");
                                mStatisticDetailDateTv.setText(String.format("%s年%s月至%s年%s月",startSplit[0],startSplit[1],endSplit[0],endSplit[1]));

                                getStatisticDetail(startTime,endTime);


                            }

                        }
                    });
                    slidingFromTopView.setView(dateWheelView);
                }

                slidingFromTopView.show();
                break;
        }
    }
}
